#!/bin/bash

# Adjust this variable to the name of your xcash-daemon unit file name
XCASH_DAEMON_SRV=xcash-daemon

# Adjust this variable to the name of your xcash-wallets unit file name
XCASH_WALLET_SRV=xcash-wallet

# Adjust this variable to the name of your xcash-dpops unit file name
XCASH_DPOPS_SRV=xcash-dpops

# Adjust this variable to the name of your mongodb unit file name
MONGODB_SRV=mongodb

XCASH_DAEMON_LOG_FILE=/var/x-network/logs/blockchain.log
XCASH_WALLET_LOG_FILE=/var/x-network/logs/rpc.log
### CUSTOM VARIABLES ###

DAEMON_URL="http://127.0.0.1:18281/json_rpc"
WALLET_URL="http://127.0.0.1:18285/json_rpc"
CURL='curl -w "\n" -s -H "Content-Type: application/json" -X'

red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

PS3='
Please enter an option: '

options=(
	"Check blockchain height"
	"Get node balance"
	"Check services status"
	"Start stopped services"
    "Stop all services"
	"Restart all services"
	"Get X-Cash DPoPS log"
    "Get X-Cash Daemon log"
    "Get X-Cash RPC Wallet log"
	"Quit"
)

function check_height(){
	if lsof -Pi :18281 -sTCP:LISTEN -t >/dev/null ; then
        DATA=`$CURL GET $DAEMON_URL -d '{"jsonrpc":"2.0","id":"0","method":"get_block_count"}'`

		HEIGHT=$(echo "$DATA" | grep '"count"' | awk {'print $2'} | sed s'|,||g' | tr -d $'\r')
		STATUS=$(echo "$DATA" | grep '"status"' | awk {'print $2'} | sed s'|"||g' | tr -d $'\r')
		
		if [ $STATUS == "OK" ]; then
			STATUS=${green}OK${reset}
		else 
			SATTUS=${red}FAIL${reset}
		fi

		echo
		echo "Blockhain sync status: $STATUS"
		echo "Blockchain height: $HEIGHT"
	else
		echo
		echo "X-Cash Daemon service is not running...."
		echo "Check the $XCASH_DAEMON_SRV service status"
	fi
}

function get_node_balance(){
	if lsof -Pi :18285 -sTCP:LISTEN -t >/dev/null ; then
        DATA=`$CURL GET $WALLET_URL -d '{"jsonrpc":"2.0","id":"0","method":"get_balance","params":{"account_index":0,"address_indices":[0]}}'`
		
		ADDR=$(echo "$DATA" | grep '"address"' | awk {'print $2'} | sed s'|"||g' | sed s'|,||g' | head -1 | tr -d $'\r')
		UNSPENT_OUTPUTS=$(echo "$DATA" | grep '"num_unspent_outputs"' | awk {'print $2'} | sed s'|"||g' | sed s'|,||g' | head -1 | tr -d $'\r')

		ATOMIC_TOTAL_BALANCE=$(echo "$DATA" | grep '"balance"' | awk {'print $2'} | sed s'|,||g' | head -1 | tr -d $'\r')
		ATOMIC_UNLOCKED_BALANCE=$(echo "$DATA" | grep '"unlocked_balance"' | awk {'print $2'} | sed s'|,||g' | head -1 | sed s"|^M||g" | tr -d $'\r')
		TOTAL_BALANCE=$((ATOMIC_TOTAL_BALANCE/1000000))
		UNLOCKED_BALANCE=$((ATOMIC_UNLOCKED_BALANCE/1000000))

		echo
		echo "Public address:   $ADDR"
		echo "Unspent outputs:  $UNSPENT_OUTPUTS"
		echo "Total balance:    $TOTAL_BALANCE XCASH"
		echo "Unlocked balance: $UNLOCKED_BALANCE XCASH" 
	else
		echo
		echo "X-Cash RCP Wallet service is not running...."
		echo "Check the $XCASH_WALLET_SRV service status"
	fi
}

function check_services_status(){
	echo
    MONGODB_UP_SINCE=$(systemctl show $MONGODB_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
    XCASH_DAEMON_UP_SINCE=$(systemctl show $XCASH_DAEMON_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
    XCASH_WALLET_UP_SINCE=$(systemctl show $XCASH_WALLET_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
    XCASH_DPOPS_UP_SINCE=$(systemctl show $XCASH_DPOPS_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")

    systemctl is-active $MONGODB_SRV --quiet \
		&& echo -e ${green}\\u2714 MongoDB service is running since...............$MONGODB_UP_SINCE${reset} \
		|| echo -e ${red}\\u2716 MongoDB service is not running${reset}

	systemctl is-active $XCASH_DAEMON_SRV --quiet \
		&& echo -e ${green}\\u2714 X-Cash Daemon service is running since.........$XCASH_DAEMON_UP_SINCE${reset} \
		|| echo -e ${red}\\u2716 X-Cash Daemon service is not running${reset}

	systemctl is-active $XCASH_WALLET_SRV --quiet \
		&& echo -e ${green}\\u2714 X-Cash RPC Wallet service is running since.....$XCASH_WALLET_UP_SINCE${reset} \
		|| echo -e ${red}\\u2716 X-Cash RPC Wallet service is not running${reset}

	systemctl is-active $XCASH_DPOPS_SRV --quiet \
		&& echo -e ${green}\\u2714 X-Cash DPoPS service is running since..........$XCASH_DPOPS_UP_SINCE${reset} \
		|| echo -e ${red}\\u2716 X-Cash DPoPS service is not running${reset}
}

function start_stopped_services(){

	echo

	if (systemctl is-active $MONGODB_SRV --quiet); then
		MONGODB_UP_SINCE=$(systemctl show $MONGODB_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
		echo -e ${green}\\u2714 MongoDB service is running since...............$MONGODB_UP_SINCE${reset}
	else
		echo -en ${red}\\u2716 MongoDB service is not running, starting it.............${reset}
		systemctl start $MONGODB_SRV && sleep 3
		systemctl is-active $MONGODB_SRV --quiet \
		&& echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
	fi

    if (systemctl is-active $XCASH_DAEMON_SRV --quiet); then
        XCASH_DAEMON_UP_SINCE=$(systemctl show $XCASH_DAEMON_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
        echo -e ${green}\\u2714 X-Cash Daemon service is running since.........$XCASH_DAEMON_UP_SINCE${reset}
    else
        echo -en ${red}\\u2716 X-Cash Daemon service is not running, starting it.......${reset}
        systemctl start $XCASH_DAEMON_SRV && sleep 3 
        systemctl is-active $XCASH_DAEMON_SRV --quiet \
		&& echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    fi

    if (systemctl is-active $XCASH_WALLET_SRV --quiet); then
        XCASH_WALLET_UP_SINCE=$(systemctl show $XCASH_WALLET_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
        echo -e ${green}\\u2714 X-Cash RPC Wallet service is running since.....$XCASH_WALLET_UP_SINCE${reset}
    else
        echo -en ${red}\\u2716 X-Cash RPC Wallet service is not running, starting it...${reset} \
        && systemctl start $XCASH_WALLET_SRV && sleep 3 \
        && systemctl is-active $XCASH_WALLET_SRV --quiet \
		&& echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    fi

    if (systemctl is-active $XCASH_DPOPS_SRV --quiet); then
        XCASH_DPOPS_UP_SINCE=$(systemctl show $XCASH_DPOPS_SRV --property=ActiveEnterTimestamp | sed s"|ActiveEnterTimestamp=||g")
        echo -e ${green}\\u2714 X-Cash DPoPS service is running since..........$XCASH_DPOPS_UP_SINCE${reset}
    else
        echo -en ${red}\\u2716 X-Cash DPoPS service is not running, starting it........${reset}
        systemctl start $XCASH_DPOPS_SRV && sleep 3
        systemctl is-active $XCASH_DPOPS_SRV --quiet \
		&& echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    fi

}

function stop_all_services(){
	echo
    echo -en ${green}Stopping X-Cash DPoPS service...............................................${reset} \
        && systemctl stop $XCASH_DPOPS_SRV && systemctl is-active $XCASH_DPOPS_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping MongoDB service....................................................${reset} \
        && systemctl stop $MONGODB_SRV && systemctl is-active $MONGODB_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping X-Cash RPC Wallet service..........................................${reset} \
        && systemctl stop $XCASH_WALLET_SRV && systemctl is-active $XCASH_WALLET_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping X-Cash Daemon service..............................................${reset} \
        && systemctl stop $XCASH_DAEMON_SRV && systemctl is-active $XCASH_DAEMON_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
}

function restart_all_services(){
	echo
	echo -en ${green}Stopping X-Cash DPoPS service...............................................${reset} \
		&& systemctl stop $XCASH_DPOPS_SRV && systemctl is-active $XCASH_DPOPS_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping MongoDB service....................................................${reset} \
		&& systemctl stop $MONGODB_SRV && systemctl is-active $MONGODB_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping X-Cash RPC Wallet service..........................................${reset} \
		&& systemctl stop $XCASH_WALLET_SRV && systemctl is-active $XCASH_WALLET_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
    echo -en ${green}Stopping X-Cash Daemon service..............................................${reset} \
		&& systemctl stop $XCASH_DAEMON_SRV && systemctl is-active $XCASH_DAEMON_SRV --quiet && echo -e ${red}\\u2716${reset} || echo -e ${green}\\u2714${reset}
	echo -en ${green}Starting X-Cash Daemon service..............................................${reset} \
		&& sleep 3 && systemctl start $XCASH_DAEMON_SRV && systemctl is-active $XCASH_DAEMON_SRV --quiet && echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    echo -en ${green}Starting X-Cash Wallet service..............................................${reset} \
		&& sleep 3 && systemctl start $XCASH_WALLET_SRV && systemctl is-active $XCASH_WALLET_SRV --quiet && echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    echo -en ${green}Starting MongoDB service....................................................${reset} \
		&& sleep 3 && systemctl start $MONGODB_SRV && systemctl is-active $MONGODB_SRV --quiet && echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}
    echo -en ${green}Starting X-Cash DPoPS service...............................................${reset} \
		&& sleep 3 && systemctl start $XCASH_DPOPS_SRV && systemctl is-active $XCASH_DPOPS_SRV --quiet && echo -e ${green}\\u2714${reset} || echo -e ${red}\\u2716${reset}

	check_services_status
}

function get_xcash_dpops_log(){
	journalctl --unit=xcash-dpops -n 500 --output cat
}

function get_xcash_daemon_log(){
	less -R $XCASH_DAEMON_LOG_FILE
}

function get_xcash_wallet_log(){
    less -R $XCASH_WALLET_LOG_FILE
}

select opt in "${options[@]}"; do
	case $opt in
		"Check blockchain height") check_height ;;
		"Get node balance") get_node_balance ;;
		"Check services status") check_services_status ;;
        "Start stopped services") start_stopped_services ;;
		"Stop all services") stop_all_services ;;
        "Restart all services") restart_all_services ;;
		"Get X-Cash DPoPS log") get_xcash_dpops_log ;;
        "Get X-Cash Daemon log") get_xcash_daemon_log ;;
        "Get X-Cash RPC Wallet log") get_xcash_wallet_log ;;
		"Quit") break ;;

		*) echo && echo "Invalid option \"$REPLY\"";;
	esac
done
